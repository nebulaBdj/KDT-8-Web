<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <ul></ul>
    <form id="chat">
        <span>사용자 : </span><input type="text" id="name"/><br/>
        <span>채팅 : </span><input type="text" id="mess"/><br/>
        <button>채팅</b utton>
    </form>
    <script>
        const socket = new WebSocket("ws://localhost:8080");

        const chatF = document.querySelector("#chat");
        const ul = document.querySelector('ul');

        //서버에 연결
        socket.addEventListener("open", (event) => {
            // socket.send("헬러")
            console.log('서버에 연결되었다');
        });

        //메세지 주고 받음
        socket.addEventListener("message", (event) => {
            console.log(event);
            // console.log(`서버로부터 박은 메세지: ${event.data}`);
            const li = document.createElement('li');
            li.textContent = event.data;
            ul.appendChild(li);
        });

        //오류 발생
        socket.addEventListener("error", (event) => {
            console.log('오류 발생', event.error);
        });

        //종료
        socket.addEventListener('close', (event) => {
            console.log("서버와 연결 종료")
        })


        ///////////////////////////////폼 이벤트//////////////////////////////
        chatF.addEventListener('submit', (event) => {
            event.preventDefault();//이벤트가 발생했을때 새로고침이나 창이동이 되지 않도록 막는것
            const msg = chatF.querySelector('#mess');
            const name = chatF.querySelector('#name');
            const data = `${name.value} : ${msg.value}`
            socket.send(data);
        })
    </script>
</body>
</html>