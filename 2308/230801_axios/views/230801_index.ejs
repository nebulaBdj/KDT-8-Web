<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://code.jquery.com/jquery-3.7.0.js" 
    integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

</head>
<body>
    <!-- 동적 form을 할떄는 액션과 메소드를 사용하지 않는다. -->
    <form name="resister">
        <label for="name">이름</label>
        <input type="text" id="name" required>
        <br/>
        <!-- 선택하는 값에는 value를 넣어줘야지 값을 가져올 수 있다. -->
        성별
        <input type="radio" name="gender" value="남자" id="male">
        <label for="male">남자</label>
        <input type="radio" name="gender" value="여자" id="female">
        <label for="female">여자</label>
        <br/>
        <button type="button" onclick="ajaxGet()">ajax get 제출</button><br/>
        <button type="button" onclick="ajaxPost()">ajax post 제출</button><br/>
        <button type="button" onclick="axiosGet()">axios get 제출</button><br/>
        <button type="button" onclick="axiosPost()">axios post 제출</button><br/>
        <button type="button" onclick="fetchGet()">fetch get 제출</button><br/>
        <button type="button" onclick="fetchPost()">fetch Post 제출</button><br/>
    </form>
    <div class="resultBox">

    </div>
    <script>
        function fetchPost(){
            const form = document.forms['resister'];
            const data = {
            name: form.name.value,
            gender: form.gender.value,
            };
            const url = `?name=${form.name.value}&gender=${form.gender.value}`
            const resultBox = document.querySelector(".resultBox");

            fetch('/fetch', {
                method : 'POST',
                headers: {
                    'Content-Type' : 'application/json',//헤더로 보낼 타입을 정한다.
                },
                body:JSON.stringify(data)//자바스크립트 객체를 JSON 텍스트로 변환
                //JSON.parser(): json 형식의 텍스트를 자바스크립트 객체로 변환  
            }).then( (res) => {
                return res.json();
            }).then((data) =>{
                console.log('data',data);
                resultBox.textContent = `POST /fetch 요청완료 ${data.name}님은 ${data.gender}이시죠?`;
                resultBox.style.color = 'YELLOW';

            });
        }
        function fetchGet(){
            const form = document.forms['resister'];
            const url = `?name=${form.name.value}&gender=${form.gender.value}`
            const resultBox = document.querySelector(".resultBox");

            fetch(`fetch${url}`,{
                method : 'GET'
            }).then((res) => {
                return res.json();
            }).then((data) => {
                console.log('data', data);
                resultBox.textContent = `GET /fetch 요청완료 ${data.name}님은 ${data.gender}이시죠?`;
                resultBox.style.color = 'limegreen';
            })
        }
        function ajaxGet(){
            // console.log('ajax.get');
            //폼 선택하기
            const form = document.forms['resister'];
            const resultBox = document.querySelector(".resultBox");
            // console.log(form);
            // console.log(form.name);
            // console.log(form.gender);
            // console.log(form.name.value);
            // console.log(form.gender.value);
            const data = {
            name: form.name.value,
            gender: form.gender.value,
            };
            $.ajax({
                type : 'GET',
                url: '/ajax',
                data: data,
                success: (res) =>{
                    console.log('res',res);
                    resultBox.textContent = `GET /ajax 요청완료 ${res.name}님은 ${res.gender}이시죠?`;
                    resultBox.style.color = 'blue';
                }
            })
        }
        function ajaxPost(){
            const form = document.forms['resister'];
            const resultBox = document.querySelector(".resultBox");

            if (form.name.value.length === 0) {
                alert('이름을 입력하세요')
                return
            }
            if (form.gender.value.length === 0) {
                alert('성별을 입력하세요')
                return
            }

            const data = {
            name: form.name.value,
            gender: form.gender.value,
            }

            form.name.value = form.gender.value = ''

            $.ajax({
                type : 'POST',
                url: '/ajax',
                data: data,
                success: (res) =>{
                    console.log('res',res);
                    resultBox.textContent = `POST /ajax 요청완료 ${res.name}님은 ${res.gender}이시죠?`;
                    resultBox.style.color = 'red';
                }
            })
        }

        function axiosGet(){
            const form = document.forms['resister'];
            const resultBox = document.querySelector(".resultBox");

            const data = {
            name: form.name.value,
            gender: form.gender.value,
            }
            
            axios({
                method:'GET',
                // url: `/axios?name=${form.name.value}&gender=${form.gender.value}`,
                url: '/axios',
                params: data,
            }).then((res) =>{
                console.log(res);
                resultBox.textContent = `GET /axios 요청완료 ${res.data.name}님은 ${res.data.gender}이시죠?`;
                resultBox.style.color = 'green';
            })
        }
        async function axiosPost(){//여기 어씽크
            const form = document.forms['resister'];
            const resultBox = document.querySelector(".resultBox");

            const data = {
            name: form.name.value,
            gender: form.gender.value,
            };

            const result = await axios({//여기 await
                method:"POST",
                url: '/axios',
                data,
            });
            resultBox.textContent = `POST /axios 요청완료 ${data.name}님은 ${data.gender}이시죠?`
            resultBox.style.color = 'purple'
            console.log(result);//그냥 이렇게 받으면 <pending> 상태가 되서 값을 못받음 따라서 비동기 처리를 해야한다.
        }
    </script>
</body>
</html>